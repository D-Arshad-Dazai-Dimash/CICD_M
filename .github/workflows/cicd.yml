name: CI-CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-world-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/hello-world-app:latest

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy to EC2
        run: |
          # Pull the latest image on EC2 and run it.
          # We'll SSH into the EC2 and run docker commands there.
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "docker pull ${{ secrets.DOCKER_USERNAME }}/hello-world-app:latest"
          # If a container is running, stop and remove it
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "docker rm -f hello-world || true"
          # Run the new container
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "docker run -d --name hello-world -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/hello-world-app:latest"
